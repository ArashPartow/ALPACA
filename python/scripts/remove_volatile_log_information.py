#!/usr/bin/env python3
# Python modules
from argparse import ArgumentParser
# alpacapy modules
from alpacapy.alpaca.remove_volatile_log_information import remove_volatile_log_information
from alpacapy.logger import Logger
from alpacapy.helper_functions import file_operations as fo


def setup_argument_parser():
    """ Creates the argument parser to pass commandline arguments.

    Returns
    -------
    ArgumentParser
        The fully created argument parser.
    """
    parser = ArgumentParser(prog="Remove volatile strings from log file",
                            description="Removes all volatile string from a log file generated by an alpaca run")
    # Add the basic other arguments
    parser.add_argument("log_file_path", help="The path to the log file that should be modified", type=str)
    parser.add_argument(
        "--modified-log-file-path",
        dest="modified_log_file_path",
        help="The path to the log file, where the modified data is written to",
        type=str,
        default=None)
    parser.add_argument("--tags-to-delete", nargs="*", dest="tags_to_delete", help="Additional tags beside default to be removed from log file", default=[])
    parser.add_argument("--quiet", action="store_false", dest="verbose", help="Disables verbosity logging", default=True)
    return parser


if __name__ == "__main__":
    """ Main part to be called when using the module with direct call. """
    parser = setup_argument_parser()
    options = parser.parse_args()

    options.log_file_path = fo.get_absolute_path(options.log_file_path)
    if options.modified_log_file_path is not None:
        options.modified_log_file_path = fo.get_absolute_path(options.modified_log_file_path)

    logger = Logger()

    logger.star_line_flush()
    logger.blank_line()

    remove_volatile_log_information(options.log_file_path, *options.tags_to_delete,
                                    modified_log_file_path=options.modified_log_file_path, verbose=options.verbose)

    logger.blank_line()
    logger.star_line_flush()
